<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Chef | :HIPSTER_DEV_BLOG]]></title>
  <link href="http://hipsterdevblog.com/blog/categories/chef/atom.xml" rel="self"/>
  <link href="http://hipsterdevblog.com/"/>
  <updated>2014-12-21T14:36:28+10:00</updated>
  <id>http://hipsterdevblog.com/</id>
  <author>
    <name><![CDATA[Tim B.]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Monitoring Per Application Metrics With CloudWatch Logs and OpsWorks]]></title>
    <link href="http://hipsterdevblog.com/blog/2014/12/21/monitoring-per-application-metrics-with-cloudwatch-logs-and-opsworks/"/>
    <updated>2014-12-21T10:53:24+10:00</updated>
    <id>http://hipsterdevblog.com/blog/2014/12/21/monitoring-per-application-metrics-with-cloudwatch-logs-and-opsworks</id>
    <content type="html"><![CDATA[<p><a href="http://aws.amazon.com/about-aws/whats-new/2014/07/10/introducing-amazon-cloudwatch-logs/">CloudWatch logs</a> is a cheap and
 easy to set up centralised logging solution. At the moment it lacks several valuable features such as a convenient way
 to search logs, however it does an <em>excellent</em> job at providing graphing and alerting on aggregated metrics pulled from
 ingested log data. An obvious application for this is to monitor HTTP server statistics to provide graphs of overall
 request rates, response sizes, and error rates.</p>

<p><a href="http://aws.amazon.com/opsworks/">OpsWorks</a> makes it easy to orchestrate a fleet of EC2 instances serving multiple applications
 (as oppose to <a href="http://aws.amazon.com/elasticbeanstalk/">Elastic Beanstalk</a> which only hosts a single application). Apache is
 the default HTTP server for most OpsWorks layer types.</p>

<p>This post demonstrates how to setup CloudWatch logs for Apache access logs on OpsWorks, then create custom CloudWatch
 metrics for an individual OpsWorks application to graph the HTTP request rate.</p>

<!-- more -->


<h1>Installing the CloudWatch agent with Chef to monitor Apache logs</h1>

<p>The first step is to install the CloudWatch agentusing a custom recipe. These instructions are based off <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/QuickStartChef.html">the AWS documentation</a>
 so <strong>follow those steps to configure your IAM instance role first</strong>.</p>

<p>Create the following files in your custom cookbooks repository, you can name the custom recipe anything you like but
 in this example I&rsquo;ve named it <code>myrecipe</code>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>myrecipe/recipes/logging.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">template</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">cwlogs</span><span class="o">.</span><span class="n">cfg</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">source</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">cwlogs</span><span class="o">.</span><span class="n">cfg</span><span class="o">.</span><span class="n">erb</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">owner</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">root</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">group</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">root</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">mode</span> <span class="mo">0644</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;directory &amp;ldquo;/o</span><span class="n">pt</span><span class="o">/</span><span class="n">aws</span><span class="o">/</span><span class="n">cloudwatch</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">recursive</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;remote_file &amp;ldquo;/o</span><span class="n">pt</span><span class="o">/</span><span class="n">aws</span><span class="o">/</span><span class="n">cloudwatch</span><span class="o">/</span><span class="n">awslogs</span><span class="o">-</span><span class="n">agent</span><span class="o">-</span><span class="n">setup</span><span class="o">.</span><span class="n">py</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">source</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py&quot;</span><span class="o">&gt;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//s</span><span class="mi">3</span><span class="o">.</span><span class="n">amazonaws</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">aws</span><span class="o">-</span><span class="n">cloudwatch</span><span class="o">/</span><span class="n">downloads</span><span class="o">/</span><span class="n">latest</span><span class="o">/</span><span class="n">awslogs</span><span class="o">-</span><span class="n">agent</span><span class="o">-</span><span class="n">setup</span><span class="o">.</span><span class="n">py</span><span class="o">&lt;</span><span class="sr">/a&gt;&amp;rdquo;</span>
</span><span class='line'><span class="sr">  mode &amp;ldquo;0755&amp;rdquo;</span>
</span><span class='line'><span class="sr">end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">execute</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">Install</span> <span class="no">CloudWatch</span> <span class="no">Logs</span> <span class="n">agent</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">command</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">aws</span><span class="o">/</span><span class="n">cloudwatch</span><span class="o">/</span><span class="n">awslogs</span><span class="o">-</span><span class="n">agent</span><span class="o">-</span><span class="n">setup</span><span class="o">.</span><span class="n">py</span> <span class="o">-</span><span class="n">n</span> <span class="o">-</span><span class="n">r</span> <span class="n">us</span><span class="o">-</span><span class="n">east</span><span class="o">-</span><span class="mi">1</span> <span class="o">-</span><span class="n">c</span> <span class="sr">/tmp/</span><span class="n">cwlogs</span><span class="o">.</span><span class="n">cfg</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">not_if</span> <span class="p">{</span> <span class="nb">system</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">pgrep</span> <span class="o">-</span><span class="n">f</span> <span class="n">aws</span><span class="o">-</span><span class="n">logs</span><span class="o">-</span><span class="n">agent</span><span class="o">-</span><span class="n">setup</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>myrecipe/templates/default/cwlogs.cfg.erb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">[general]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;h1&gt;Path to the AWSLogs agent&amp;rsquo;s state file. Agent uses this file to maintain&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;h1&gt;client side state across its executions.&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;state_file = /var/awslogs/state/agent-state&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;[&amp;lt;%= node[:opsworks][:stack][:name] </span><span class="err">%&gt;</span><span class="x">-http-access]</span>
</span><span class='line'><span class="x">datetime_format = [%Y-%m-%d %H:%M:%S]</span>
</span><span class='line'><span class="x">log_group_name = &amp;lt;%= node[:opsworks][:stack][:name].gsub(&amp;lsquo; &amp;rsquo;,&amp;lsquo;_&amp;rsquo;) </span><span class="err">%&gt;</span><span class="x">-http-access</span>
</span><span class='line'><span class="x">file = &amp;lt;%= node[:apache][:log_dir] </span><span class="err">%&gt;</span><span class="x">/*-access.log</span>
</span><span class='line'><span class="x">log_stream_name = &amp;lt;%= node[:opsworks][:instance][:hostname] </span><span class="err">%&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The significant line is <code>file = &lt;%= node[:apache][:log_dir] %&gt;/*-access.log</code> which
 sets the log location to the Apache HTTP access logs.</p>

<p>Next, add this recipe to the setup lifecycle event of your OpsWorks layer:</p>

<p><img src="/images/posts/cwlogsopsworks/logrecipe.png"></p>

<h1>Including application in Apache access logs</h1>

<p>The other change we need to make is to include the application name in the Apache access logs, otherwise we won&rsquo;t
 be able to filter by application when creating a logging metric in CloudWatch.</p>

<p>To do this you need to override the Apache vhost template in the OpsWorks cookbooks. The recipe containing this template
 will depend on the application type, for example it&rsquo;s located in <code>mod_php5_apache2/templates/default/web_app.conf.erb</code> or
<code>passenger_apache2/templates/default/web_app.conf.erb</code> for PHP and Ruby applications respectively.</p>

<p>In this example we&rsquo;ll assume a PHP application, so create the following file in your custom cookbooks repository:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>mod_php5_apache2/templates/default/web_app.conf.erb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;VirtualHost *:80&gt;</span>
</span><span class='line'><span class="x">  ServerName &amp;lt;%= @params[:server_name] </span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &amp;lt;% if @params[:server_aliases] &amp;amp;&amp;amp; !@params[:server_aliases].empty? &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  ServerAlias &amp;lt;% @params[:server_aliases].each do |a| </span><span class="err">%&gt;</span><span class="x">&amp;lt;%= &amp;ldquo;#{a}&amp;rdquo; </span><span class="err">%&gt;</span><span class="x"> &amp;lt;% end </span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &amp;lt;% end &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  DocumentRoot &amp;lt;%= @params[:docroot] </span><span class="err">%&gt;</span><span class="x">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  &lt;Directory </span><span class="cp">&lt;%=</span> <span class="vi">@params</span><span class="o">[</span><span class="ss">:docroot</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x">&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;&lt;code&gt;Options FollowSymLinks</span>
</span><span class='line'><span class="x">AllowOverride All</span>
</span><span class='line'><span class="x">Order allow,deny</span>
</span><span class='line'><span class="x">Allow from all</span>
</span><span class='line'><span class="x">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  &lt;/Directory&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  &lt;Directory ~ &quot;\.svn&quot;&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;&lt;code&gt;Order allow,deny</span>
</span><span class='line'><span class="x">Deny from all</span>
</span><span class='line'><span class="x">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  &lt;/Directory&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  &lt;Directory ~ &quot;\.git&quot;&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;&lt;code&gt;Order allow,deny</span>
</span><span class='line'><span class="x">Deny from all</span>
</span><span class='line'><span class="x">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  &lt;/Directory&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  LogFormat &amp;ldquo;%h %l %u %t \&amp;rdquo;%r\&amp;ldquo; </span><span class="err">%&gt;</span><span class="x">s %b \&amp;rdquo;%{Referer}i\&amp;ldquo; \&amp;rdquo;%{User-agent}i\&amp;ldquo; \&amp;rdquo;&amp;lt;%= @params[:name] </span><span class="err">%&gt;</span><span class="x">\&amp;ldquo;&amp;rdquo; combinedwithapp&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  LogLevel &amp;lt;%= node[:apache][:log_level] </span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  ErrorLog &amp;lt;%= node[:apache][:log_dir] </span><span class="err">%&gt;</span><span class="x">/&amp;lt;%= @params[:name] </span><span class="err">%&gt;</span><span class="x">-error.log</span>
</span><span class='line'><span class="x">  CustomLog &amp;lt;%= node[:apache][:log_dir] </span><span class="err">%&gt;</span><span class="x">/&amp;lt;%= @params[:name] </span><span class="err">%&gt;</span><span class="x">-access.log combinedwithapp</span>
</span><span class='line'><span class="x">  CustomLog &amp;lt;%= node[:apache][:log_dir] </span><span class="err">%&gt;</span><span class="x">/&amp;lt;%= @params[:name] </span><span class="err">%&gt;</span><span class="x">-ganglia.log ganglia&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  FileETag none&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  RewriteEngine On</span>
</span><span class='line'><span class="x">  &amp;lt;% if node[:apache][:version] == &amp;lsquo;2.2&amp;rsquo; &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  Include &amp;lt;%= @params[:rewrite_config] </span><span class="err">%&gt;</span><span class="x">&lt;em&gt;</span>
</span><span class='line'><span class="x">  RewriteLog &amp;lt;%= node[:apache][:log_dir] </span><span class="err">%&gt;</span><span class="x">/&amp;lt;%= @application_name </span><span class="err">%&gt;</span><span class="x">-rewrite.log</span>
</span><span class='line'><span class="x">  RewriteLogLevel 0</span>
</span><span class='line'><span class="x">  &amp;lt;% else &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  IncludeOptional &amp;lt;%= @params[:rewrite_config] </span><span class="err">%&gt;</span><span class="x">&lt;/em&gt;</span>
</span><span class='line'><span class="x">  &amp;lt;% end &amp;ndash;</span><span class="err">%&gt;</span><span class="x">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  &amp;lt;% @environment.each do |key, value| </span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  SetEnv &amp;ldquo;&amp;lt;%= key </span><span class="err">%&gt;</span><span class="x">&amp;rdquo; &amp;ldquo;&amp;lt;%= value </span><span class="err">%&gt;</span><span class="x">&amp;rdquo;</span>
</span><span class='line'><span class="x">  &amp;lt;% end </span><span class="err">%&gt;</span><span class="x">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  &amp;lt;% if @params[:mounted_at] &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  AliasMatch ^&amp;lt;%= @params[:mounted_at] </span><span class="err">%&gt;</span><span class="x">/(.*)$ &amp;lt;%= @params[:docroot] </span><span class="err">%&gt;</span><span class="x">$1</span>
</span><span class='line'><span class="x">  &amp;lt;% end &amp;ndash;</span><span class="err">%&gt;</span><span class="x">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  &amp;lt;% if node[:apache][:version] == &amp;lsquo;2.2&amp;rsquo; &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  Include &amp;lt;%= @params[:local_config] </span><span class="err">%&gt;</span><span class="x">&lt;em&gt;</span>
</span><span class='line'><span class="x">  &amp;lt;% else &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  IncludeOptional &amp;lt;%= @params[:local_config] </span><span class="err">%&gt;</span><span class="x">&lt;/em&gt;</span>
</span><span class='line'><span class="x">  &amp;lt;% end &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;/VirtualHost&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;&amp;lt;% if node[:deploy][@application_name][:ssl_support] &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;VirtualHost *:443&gt;</span>
</span><span class='line'><span class="x">  ServerName &amp;lt;%= @params[:server_name] </span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &amp;lt;% if @params[:server_aliases] &amp;amp;&amp;amp; !@params[:server_aliases].empty? &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  ServerAlias &amp;lt;% @params[:server_aliases].each do |a| </span><span class="err">%&gt;</span><span class="x">&amp;lt;%= &amp;ldquo;#{a}&amp;rdquo; </span><span class="err">%&gt;</span><span class="x"> &amp;lt;% end </span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &amp;lt;% end &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  DocumentRoot &amp;lt;%= @params[:docroot] </span><span class="err">%&gt;</span><span class="x">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  SSLEngine on</span>
</span><span class='line'><span class="x">  SSLProxyEngine on</span>
</span><span class='line'><span class="x">  SSLCertificateFile &amp;lt;%= node[:apache][:dir] </span><span class="err">%&gt;</span><span class="x">/ssl/&amp;lt;%= @params[:server_name] </span><span class="err">%&gt;</span><span class="x">.crt</span>
</span><span class='line'><span class="x">  SSLCertificateKeyFile &amp;lt;%= node[:apache][:dir] </span><span class="err">%&gt;</span><span class="x">/ssl/&amp;lt;%= @params[:server_name] </span><span class="err">%&gt;</span><span class="x">.key</span>
</span><span class='line'><span class="x">  &amp;lt;% if @params[:ssl_certificate_ca] &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  SSLCACertificateFile &amp;lt;%= node[:apache][:dir] </span><span class="err">%&gt;</span><span class="x">/ssl/&amp;lt;%= @params[:server_name] </span><span class="err">%&gt;</span><span class="x">.ca</span>
</span><span class='line'><span class="x">  &amp;lt;% end &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  SetEnvIf User-Agent &amp;ldquo;.&lt;em&gt;MSIE.&lt;/em&gt;&amp;rdquo; nokeepalive ssl-unclean-shutdown downgrade-1.0 force-response-1.0&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  &lt;Directory </span><span class="cp">&lt;%=</span> <span class="vi">@params</span><span class="o">[</span><span class="ss">:docroot</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x">&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;&lt;code&gt;Options FollowSymLinks</span>
</span><span class='line'><span class="x">AllowOverride All</span>
</span><span class='line'><span class="x">Order allow,deny</span>
</span><span class='line'><span class="x">Allow from all</span>
</span><span class='line'><span class="x">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  &lt;/Directory&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  &lt;Directory ~ &quot;\.svn&quot;&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;&lt;code&gt;Order allow,deny</span>
</span><span class='line'><span class="x">Deny from all</span>
</span><span class='line'><span class="x">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  &lt;/Directory&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  &lt;Directory ~ &quot;\.git&quot;&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;&lt;code&gt;Order allow,deny</span>
</span><span class='line'><span class="x">Deny from all</span>
</span><span class='line'><span class="x">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  &lt;/Directory&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  LogLevel &amp;lt;%= node[:apache][:log_level] </span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  ErrorLog &amp;lt;%= node[:apache][:log_dir] </span><span class="err">%&gt;</span><span class="x">/&amp;lt;%= @params[:name] </span><span class="err">%&gt;</span><span class="x">-error.log</span>
</span><span class='line'><span class="x">  CustomLog &amp;lt;%= node[:apache][:log_dir] </span><span class="err">%&gt;</span><span class="x">/&amp;lt;%= @params[:name] </span><span class="err">%&gt;</span><span class="x">-ssl-access.log combinedwithapp</span>
</span><span class='line'><span class="x">  CustomLog &amp;lt;%= node[:apache][:log_dir] </span><span class="err">%&gt;</span><span class="x">/&amp;lt;%= @params[:name] </span><span class="err">%&gt;</span><span class="x">-ssl-ganglia.log ganglia&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  FileETag none&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  RewriteEngine On</span>
</span><span class='line'><span class="x">  &amp;lt;% if node[:apache][:version] == &amp;lsquo;2.2&amp;rsquo; &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  Include &amp;lt;%= @params[:rewrite_config] </span><span class="err">%&gt;</span><span class="x">-ssl&lt;em&gt;</span>
</span><span class='line'><span class="x">  RewriteLog &amp;lt;%= node[:apache][:log_dir] </span><span class="err">%&gt;</span><span class="x">/&amp;lt;%= @application_name </span><span class="err">%&gt;</span><span class="x">-rewrite.log</span>
</span><span class='line'><span class="x">  RewriteLogLevel 0</span>
</span><span class='line'><span class="x">  &amp;lt;% else &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  IncludeOptional &amp;lt;%= @params[:rewrite_config] </span><span class="err">%&gt;</span><span class="x">-ssl&lt;/em&gt;</span>
</span><span class='line'><span class="x">  &amp;lt;% end &amp;ndash;</span><span class="err">%&gt;</span><span class="x">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  &amp;lt;% @environment.each do |key, value| </span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  SetEnv &amp;ldquo;&amp;lt;%= key </span><span class="err">%&gt;</span><span class="x">&amp;rdquo; &amp;ldquo;&amp;lt;%= value </span><span class="err">%&gt;</span><span class="x">&amp;rdquo;</span>
</span><span class='line'><span class="x">  &amp;lt;% end </span><span class="err">%&gt;</span><span class="x">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  &amp;lt;% if @params[:mounted_at] &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  AliasMatch ^&amp;lt;%= @params[:mounted_at] </span><span class="err">%&gt;</span><span class="x">/(.*)$ &amp;lt;%= @params[:docroot] </span><span class="err">%&gt;</span><span class="x">$1</span>
</span><span class='line'><span class="x">  &amp;lt;% end &amp;ndash;</span><span class="err">%&gt;</span><span class="x">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;  &amp;lt;% if node[:apache][:version] == &amp;lsquo;2.2&amp;rsquo; &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  Include &amp;lt;%= @params[:local_config] </span><span class="err">%&gt;</span><span class="x">-ssl&lt;em&gt;</span>
</span><span class='line'><span class="x">  &amp;lt;% else &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  IncludeOptional &amp;lt;%= @params[:local_config] </span><span class="err">%&gt;</span><span class="x">-ssl&lt;/em&gt;</span>
</span><span class='line'><span class="x">  &amp;lt;% end &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;/VirtualHost&gt;</span>
</span><span class='line'><span class="x">&amp;lt;% end &amp;ndash;</span><span class="err">%&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This configuration is based on the <a href="https://github.com/aws/opsworks-cookbooks/blob/release-chef-11.10/mod_php5_apache2/templates/default/web_app.conf.erb">default template</a> so
 it may be best to start with the latest template file on GitHub.</p>

<p>Note the following lines which are relevant:</p>

<p><code>LogFormat "%h %l %u %t \"%r\" %&gt;s %b \"%{Referer}i\" \"%{User-agent}i\" \"&lt;%= @params[:name] %&gt;\"" combinedwithapp</code></p>

<p>This is creating a new log format called <code>combinedweithapp</code>, it&rsquo;s the same as the <code>combined</code> format except the app name
 is appended to the end.</p>

<p><code>CustomLog &lt;%= node[:apache][:log_dir] %&gt;/&lt;%= @params[:name] %&gt;-access.log combinedwithapp</code>
<code>CustomLog &lt;%= node[:apache][:log_dir] %&gt;/&lt;%= @params[:name] %&gt;-ssl-access.log combinedwithapp</code></p>

<p>This is telling both the HTTP and HTTPS access logs to use the new custom format.</p>

<h1>Testing the logging</h1>

<p>If you now launch an instance, wait for it to come online then load the App a few times you should begin to see logs
 appearing in CloudWatch after a few minutes.</p>

<p><img src="/images/posts/cwlogsopsworks/logsappearing.png"></p>

<p>This indicates that the CloudWatch agent is working, you should also be able to see the app name. You&rsquo;ll notice
 that logs are nicely categorized by stack and instance too.</p>

<h1>Creating a metric to monitor HTTP requests by App</h1>

<p>How that we have Apache access logs being sent to CloudWatch including the App name we can setup a metric to monitor
 the number of requests made to this application.</p>

<p>From the &ldquo;Log Groups&rdquo; screen in CloudWatch, tick the appropriate log group (<code>cw-logs-test-http-access</code> in this example) and then
 click &ldquo;Create Metric Filter&rdquo; at the top.</p>

<p>Enter the following Filter Pattern:</p>

<p><code>[host, logName, user, timestamp, request, statusCode, size, referer, useragent, app=app1, ...]</code></p>

<p>Note that you should replace app1 with the name of the app you&rsquo;re interested in.</p>

<p><img src="/images/posts/cwlogsopsworks/metricfilterapp.png"></p>

<p>You can test your filter pattern, otherwise proceed by clicking &ldquo;Assign Metric&rdquo;.</p>

<p><img src="/images/posts/cwlogsopsworks/metric-name.png"></p>

<p>Give your new metric an appropriate namespace (group) and name. As we&rsquo;re only interested in the number of requests the
 &ldquo;Metric Value&rdquo; is 1 (1 per request).</p>

<h1>Viewing the results</h1>

<p>Once you&rsquo;ve created the metric you won&rsquo;t see data until more logs matching that criteria occur, so either generate some
 traffic on your app or wait for some to come in. There can be a delay of about 5 minutes for metrics data to appear.</p>

<p>After data has been recorded into the metric you should be able to find that metric either by searching the metrics list
 or from the &ldquo;Custom Metrics&rdquo; drop down which will appear after you refresh the page.</p>

<p><img src="/images/posts/cwlogsopsworks/request_graph.png"></p>

<p>Change the aggregation type from &ldquo;average&rdquo; to &ldquo;sum&rdquo; and you should now see a nice graph of the requests going to your app
 over time. You can change the interval to 1 minute to get the most detailed graph.</p>

<h1>Other metrics</h1>

<p>In this example we&rsquo;re only interested in the number of HTTP requests, but you can easily create additional metrics for things
 like 4xx errors or response size (to get an estimate of bandwidth usage by app).</p>

<p>To graph 4xx errors use a Filter Pattern like this (note the statusCode field):</p>

<p><code>[host, logName, user, timestamp, request, statusCode=4*, size, referer, useragent, app=app1, ...]</code></p>

<p>To graph response size enter <code>$size</code> instead of 1 as the &ldquo;Metric Value&rdquo; when creating the metric.</p>

<p>To monitor multiple apps simply create additional sets of your custom metrics, each with a different app filter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Part 3: Integrating OpsWorks and CodeDeploy]]></title>
    <link href="http://hipsterdevblog.com/blog/2014/11/25/part-3-integrating-opsworks-and-codedeploy/"/>
    <updated>2014-11-25T11:43:36+10:00</updated>
    <id>http://hipsterdevblog.com/blog/2014/11/25/part-3-integrating-opsworks-and-codedeploy</id>
    <content type="html"><![CDATA[<p>This is part 3 of <a href="/blog/categories/integrating-opsworks-and-codedeploy/">integrating OpsWorks and CodeDeploy</a>.</p>

<p>This section covers creating the CodeDeploy deployment, deploying it to the configured OpsWorks stack and demonstrating the results of the integration.
 <a href="/blog/2014/11/23/integrating-opsworks-and-codedeploy/">Click here</a> for Part 1.</p>

<!-- more -->


<h1>Setting bucket policy and uploading deployment package</h1>

<p>Now we&rsquo;re ready to deploy a package from CodeDeploy.</p>

<p>For the purposes of this example the package will contain two files:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>File Structure </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>appspec.yml
</span><span class='line'>app/index.php</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The <a href="http://docs.aws.amazon.com/codedeploy/latest/userguide/app-spec-ref.html">AppSpec</a> specifies that the contents of the
 App directory should be copied to the location of the placeholder OpsWorks deployment.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>appspec.yml </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">version</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">0.0</span>
</span><span class='line'><span class="l-Scalar-Plain">os</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">linux</span>
</span><span class='line'><span class="l-Scalar-Plain">files</span><span class="p-Indicator">:</span>
</span><span class='line'>   <span class="nl">&amp;ndash</span><span class="l-Scalar-Plain">; source</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">app&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">&lt;pre&gt;&lt;code&gt; destination</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/srv/www/my_app/public</span>
</span><span class='line'><span class="l-Scalar-Plain">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/index.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">h1</span><span class="o">&gt;</span><span class="nx">Hello</span> <span class="nx">from</span> <span class="nx">CodeDeploy</span><span class="o">&lt;/</span><span class="nx">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Zip this up and upload it to your S3 bucket where you&rsquo;ll store your deployment packages.</p>

<p>If you haven&rsquo;t already done so, you will also need to apply the S3 bucket policy provided <a href="http://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-deploy-revision.html">here</a>
 to allow the CodeDeploy role access to objects in this bucket:</p>

<p><img src="/images/posts/opsworks_codedeploy/bucket_policy.png"></p>

<p>One important note is that you must also include the role ARN for your OpsWorks instances as above.</p>

<p>You can find the stack profile in the security settings of the layer:</p>

<p><img src="/images/posts/opsworks_codedeploy/instanceprofile.png"></p>

<p>Then get the role ARN from your IAM console:</p>

<p><img src="/images/posts/opsworks_codedeploy/iaminstanceprofile.png"></p>

<h1>Running CodeDeploy deployment</h1>

<p>We&rsquo;re now ready to deploy our application with CodeDeploy, head back to the CodeDeploy application you created earlier
 and create a new deployment from the zip you uploaded.</p>

<p><img src="/images/posts/opsworks_codedeploy/codedeploy_deployment.png"></p>

<p>Click &ldquo;Deploy Now&rdquo; and wait for the deployment to conclude.</p>

<p>Should your deployment fail, click &ldquo;View All Instances&rdquo; > &ldquo;View Events&rdquo; beside an instance and click &ldquo;View Logs&rdquo; beside the failed step.</p>

<h2>Viewing your application</h2>

<p>Your application should now successfully be deployed to your OpsWorks instances. If you view the application in your
 browser you should see your deployment.</p>

<p><img src="/images/posts/opsworks_codedeploy/complete.png"></p>

<h2>Caveats &ndash; Launching a new instance</h2>

<p>Unfortunately it seems CodeDeploy currently only supports automatic deployments for new instances when they&rsquo;re in
 an autoscaling group. OpsWorks only supports its own load and time based instance functionality rather than
 using autoscaling groups, and therefore you&rsquo;ll have to manually trigger a deployment after a new instance comes online
 and before you place it under your load-balancer. You may wish for your recipes to cause the load-balancer health
 check to fail by default, then have a separate recipe which enables the health check to pass which you can run manually
 once you&rsquo;ve run a deployment after a new instance has been launched.</p>

<p>Alternatively you could use your configure recipe to trigger a deployment automatically using the CodeDeploy API,
 however you would need to know which specific applications are relevant to the instance.</p>

<h2>Integrating OpsWorks and CodeDeploy</h2>

<ul>
<li><a href="/blog/2014/11/23/integrating-opsworks-and-codedeploy/">Part 1</a> &ndash; Introduction and getting started.</li>
<li><a href="/blog/2014/11/24/part-2-integrating-opsworks-and-codedeploy/">Part 2</a> &ndash; OpsWorks configuration and recipes.</li>
<li><a href="/blog/2014/11/25/part-3-integrating-opsworks-and-codedeploy/">Part 3</a> &ndash; Deployment and results.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Part 2: Integrating OpsWorks and CodeDeploy]]></title>
    <link href="http://hipsterdevblog.com/blog/2014/11/24/part-2-integrating-opsworks-and-codedeploy/"/>
    <updated>2014-11-24T11:43:29+10:00</updated>
    <id>http://hipsterdevblog.com/blog/2014/11/24/part-2-integrating-opsworks-and-codedeploy</id>
    <content type="html"><![CDATA[<p>This is part 2 of <a href="/blog/categories/integrating-opsworks-and-codedeploy/">integrating OpsWorks and CodeDeploy</a>.</p>

<p>This section covers creating the OpsWorks Chef recipes to deploy your application via CodeDeploy.
 <a href="/blog/2014/11/23/integrating-opsworks-and-codedeploy/">Click here</a> for Part 1.</p>

<!-- more -->


<h1>Installing CodeDeploy agent via Chef</h1>

<p>Next we need to write a custom chef recipe to install the CodeDeploy agent and perform our desired configuration.</p>

<p>Checkout your cookbooks repository and create the following files:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>File Structure </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Berksfile
</span><span class='line'>myrecipe/metadata.rb
</span><span class='line'>myrecipe/recipes/agent-install.rb
</span><span class='line'>myrecipe/recipes/vhost.rb
</span><span class='line'>myrecipe/templates/default/myapp_vhost.erb</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Populate these files with the following:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Berksfile </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;https://supermarket.getchef.com&quot;</span><span class="o">&gt;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//su</span><span class="n">permarket</span><span class="o">.</span><span class="n">getchef</span><span class="o">.</span><span class="n">com</span><span class="o">&lt;</span><span class="sr">/a&gt;&amp;rdquo;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>(We won&rsquo;t be using <a href="http://docs.aws.amazon.com/opsworks/latest/userguide/cookbooks-101-opsworks-berkshelf.html">Berkshelf</a>
 in this tutorial, however you&rsquo;ll probably want to create this file any way if you&rsquo;re planning to extend this tutorial
  with your own configuration)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>myrecipe/metadata.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">name</span>    <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">myrecipe</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="n">recipe</span>  <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">myrecipe</span><span class="o">::</span><span class="n">agent</span><span class="o">-</span><span class="n">install</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Fetches</span><span class="p">,</span> <span class="n">installs</span><span class="p">,</span> <span class="ow">and</span> <span class="n">starts</span> <span class="n">the</span> <span class="no">AWS</span> <span class="no">CodeDeploy</span> <span class="n">host</span> <span class="n">agent</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This is the code which downloads, installs and starts the CodeDeploy agent service:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>myrecipe/recipes/agent-install.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">remote_file</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="c1">#{Chef::Config[:file_cache_path]}/codedeploy-install.sh&amp;rdquo; do&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">source</span> <span class="s2">&quot;https://s3.amazonaws.com/aws-codedeploy-us-east-1/latest/install&quot;</span>
</span><span class='line'><span class="n">mode</span> <span class="s2">&quot;0744&quot;</span>
</span><span class='line'><span class="n">owner</span> <span class="s2">&quot;root&quot;</span>
</span><span class='line'><span class="n">group</span> <span class="s2">&quot;root&quot;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;execute &amp;ldquo;install_codedeploy_agent&amp;rdquo; do</span>
</span><span class='line'><span class="sr">  command &amp;ldquo;</span><span class="si">#{</span><span class="no">Chef</span><span class="o">::</span><span class="no">Config</span><span class="o">[</span><span class="ss">:file_cache_path</span><span class="o">]</span><span class="si">}</span><span class="sr">/</span><span class="n">codedeploy</span><span class="o">-</span><span class="n">install</span><span class="o">.</span><span class="n">sh</span> <span class="n">auto</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">user</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">root</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;service &amp;ldquo;codedeploy-agent&amp;rdquo; do&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">action</span> <span class="o">[</span><span class="ss">:enable</span><span class="p">,</span> <span class="ss">:start</span><span class="o">]</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This code creates a directory for the CodeDeploy to deploy to, creates the vhost and enables it.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>myrecipe/recipes/vhost.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">directory</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">/</span><span class="n">srv</span><span class="o">/</span><span class="n">www</span><span class="o">/</span><span class="n">my_app</span><span class="o">/</span><span class="kp">public</span><span class="o">/&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">owner</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">deploy</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">group</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">www</span><span class="o">-</span><span class="n">data</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">recursive</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;directory &amp;lsquo;/e</span><span class="n">tc</span><span class="o">/</span><span class="n">apache2</span><span class="o">/</span><span class="n">sites</span><span class="o">-</span><span class="n">available</span><span class="o">/</span><span class="n">my_app</span><span class="o">.</span><span class="n">conf</span><span class="o">.</span><span class="n">d</span><span class="o">/&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="k">do</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;owner &#39;root&#39;</span>
</span><span class='line'><span class="sr">group &#39;root&#39;</span>
</span><span class='line'><span class="sr">mode 0644</span>
</span><span class='line'><span class="sr">recursive true</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">template</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">myapp_vhost</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="k">do</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;path  &#39;/e</span><span class="n">tc</span><span class="o">/</span><span class="n">apache2</span><span class="o">/</span><span class="n">sites</span><span class="o">-</span><span class="n">available</span><span class="o">/</span><span class="n">my_app</span><span class="o">.</span><span class="n">conf</span><span class="s1">&#39;</span>
</span><span class='line'><span class="s1">owner &#39;</span><span class="n">root</span><span class="s1">&#39;</span>
</span><span class='line'><span class="s1">group &#39;</span><span class="n">root</span><span class="err">&#39;</span>
</span><span class='line'><span class="n">mode</span> <span class="mo">0644</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;link &amp;ldquo;/e</span><span class="n">tc</span><span class="o">/</span><span class="n">apache2</span><span class="o">/</span><span class="n">sites</span><span class="o">-</span><span class="n">enabled</span><span class="o">/</span><span class="n">my_app</span><span class="o">.</span><span class="n">conf</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">to</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">apache2</span><span class="o">/</span><span class="n">sites</span><span class="o">-</span><span class="n">available</span><span class="o">/</span><span class="n">my_app</span><span class="o">.</span><span class="n">conf</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This is a standard Apache vhost configuration based on the default OpsWorks template:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>myrecipe/templates/default/myapp_vhost.erb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='apacheconf'><span class='line'><span class="nt">&lt;VirtualHost</span> <span class="s">*:80</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nb">ServerName</span> myapp.com
</span><span class='line'>  <span class="nb">DocumentRoot</span> <span class="sx">/srv/www/my_app/public/</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;Directory</span> <span class="s">/srv/www/my_app/public/</span><span class="nt">&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="nb">Options</span> FollowSymLinks
</span><span class='line'><span class="nb">AllowOverride</span> <span class="k">All</span>
</span><span class='line'><span class="nb">Order</span> allow,deny
</span><span class='line'><span class="nb">Allow</span> from <span class="k">all</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/Directory&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;Directory</span> <span class="s">~ &quot;\.svn&quot;</span><span class="nt">&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="nb">Order</span> allow,deny
</span><span class='line'><span class="nb">Deny</span> from <span class="k">all</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/Directory&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;Directory</span> <span class="s">~ &quot;\.git&quot;</span><span class="nt">&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="nb">Order</span> allow,deny
</span><span class='line'><span class="nb">Deny</span> from <span class="k">all</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/Directory&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nb">LogLevel</span> <span class="k">info</span>
</span><span class='line'>  <span class="nb">ErrorLog</span> <span class="sx">/var/log/apache2/my_app-error.log</span>
</span><span class='line'>  <span class="nb">CustomLog</span> <span class="sx">/var/log/apache2/my_app-access.log</span> combined
</span><span class='line'>  <span class="nb">CustomLog</span> <span class="sx">/var/log/apache2/my_app-ganglia.log</span> ganglia&lt;/p&gt;
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nb">FileETag</span> <span class="k">none</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nb">RewriteEngine</span> <span class="k">On</span>
</span><span class='line'>  <span class="nb">IncludeOptional</span> <span class="sx">/etc/apache2/sites-available/my_app.conf.d/rewrite</span>*&lt;/p&gt;
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nb">IncludeOptional</span> <span class="sx">/etc/apache2/sites-available/my_app.conf.d/local</span>*
</span><span class='line'><span class="nt">&lt;/VirtualHost&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>In this step you may also like to create additional recipes for other configuration tasks, such as installing dependencies
or configuring your HTTP server.</p>

<h1>Adding recipes and packages to layer via OpsWorks</h1>

<p>Once you&rsquo;ve committed and pushed your recipes, go to OpsWorks and add the agent recipe to the configure lifecycle event
of your application server layer. Also add <code>ruby2.0</code> and <code>awscli</code> to the OS packages.</p>

<p> <img src="/images/posts/opsworks_codedeploy/recipes.png"></p>

<h1>Creating placeholder deployment</h1>

<p>Because OpsWorks doesn&rsquo;t perform certain default configuration tasks (such as creating a www-data group) until
 a deployment occurs it&rsquo;s easiest to create a placeholder OpsWorks deployment with a holding page which will be replaced
 by CodeDeploy. You could of course skip this step and manually configure everything via custom recipes.</p>

<p>In this instance we&rsquo;ll create a new repository for the placeholder which contains nothing but an index.php file containing
 a placeholder message.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>index.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">h1</span><span class="o">&gt;</span><span class="k">This</span> <span class="nx">server</span> <span class="nx">is</span> <span class="nx">undergoing</span> <span class="nx">maintenance</span><span class="p">,</span> <span class="nx">please</span> <span class="k">try</span> <span class="nx">reloading</span> <span class="nx">the</span> <span class="nx">page</span><span class="o">&lt;/</span><span class="nx">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Create this deployment in OpsWorks:</p>

<p><img src="/images/posts/opsworks_codedeploy/opsworksdeploy.png"></p>

<h1>Starting an instance</h1>

<p>You can now start an instance in OpsWorks. It usually takes at least 20 minutes to boot and execute the setup and configure
 recipes. After this has complete your instance should have a status of online:</p>

<p><img src="/images/posts/opsworks_codedeploy/online.png"></p>

<p>You should also see the placeholder message when you visit the IP in a browser:</p>

<p><img src="/images/posts/opsworks_codedeploy/holding.png"></p>

<p>This should also have installed and started the CodeDeploy agent.</p>

<h2>Integrating OpsWorks and CodeDeploy</h2>

<ul>
<li><a href="/blog/2014/11/23/integrating-opsworks-and-codedeploy/">Part 1</a> &ndash; Introduction and getting started.</li>
<li><a href="/blog/2014/11/24/part-2-integrating-opsworks-and-codedeploy/">Part 2</a> &ndash; OpsWorks configuration and recipes.</li>
<li><a href="/blog/2014/11/25/part-3-integrating-opsworks-and-codedeploy/">Part 3</a> &ndash; Deployment and results.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Part 1: Integrating OpsWorks and CodeDeploy]]></title>
    <link href="http://hipsterdevblog.com/blog/2014/11/23/integrating-opsworks-and-codedeploy/"/>
    <updated>2014-11-23T11:09:28+10:00</updated>
    <id>http://hipsterdevblog.com/blog/2014/11/23/integrating-opsworks-and-codedeploy</id>
    <content type="html"><![CDATA[<p>Amazon <a href="http://aws.amazon.com/blogs/aws/code-management-and-deployment/">recently announced</a> a new deployment service
called <a href="http://aws.amazon.com/codedeploy/">CodeDeploy</a>. <a href="http://aws.amazon.com/opsworks/">OpsWorks</a> is another application
 management product which provides excellent configuration management via <a href="https://www.getchef.com/">Chef</a>, however it
lacks the advanced deployment functionality of CodeDeploy. It therefore makes sense to integrate these two products,
delegating the configuration management to OpsWorks and the deployment functionality to CodeDeploy.</p>

<p>This is part 1 of <a href="/blog/categories/integrating-opsworks-and-codedeploy/">integrating OpsWorks and CodeDeploy</a>.</p>

<p>This section provides an introduction to OpsWorks and CodeDeploy, and the basic configuration required to get started.</p>

<!-- more -->


<h2>Why not just use OpsWorks?</h2>

<p>OpsWorks is a great product, but it lacks several key deployment features such as the ability to run rolling
 deployments and cancel an in-flight deployment.</p>

<h2>Why not just use CodeDeploy?</h2>

<p>While CodeDeploy does support the execution of configuration scripts in lifecycle events, these could easily become
 difficult to maintain if your configuration is complex. Also, the configuration might not belong to any specific
 application, and if you&rsquo;re running multiple applications per instance it might make sense to configure certain
 shared services on a per-server basis rather than per-application. OpsWorks is an excellent solution to these issues
 as it supports Chef and per-instance setup and configuration lifecycle events.</p>

<h1>Getting started</h1>

<p>To get started you&rsquo;ll need to set up an OpsWorks stack with a custom cookbook repository. The stack also must be created
 in a region where CodeDeploy is supported, such as North Virginia. If you&rsquo;re using a VPC don&rsquo;t forget to configure your
  VPC to <a href="http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-vpc.html">allow external connectivity</a>.</p>

<p>My stack configuration is as follows, as you can see I&rsquo;ll be using Ubuntu 14.04, but the steps should be similar on
 Amazon linux.</p>

<p><img src="/images/posts/opsworks_codedeploy/stack.png"></p>

<p>Also, create a layer for your application servers. For example I&rsquo;ve created a PHP App Server layer. Don&rsquo;t forget to
 enable &ldquo;Public IP addresses&rdquo; under the networking options.</p>

<p><img src="/images/posts/opsworks_codedeploy/layer.png"></p>

<p>In this example I&rsquo;m also going to deploy from S3, rather than GitHub. Therefore I&rsquo;ll assume you have an S3 bucket created
to host the zip deployment packages.</p>

<h1>Creating a CodeDeploy Service Role</h1>

<p>You&rsquo;ll need to create a service role for CodeDeploy before proceeding, although if you&rsquo;ve already followed the &ldquo;Sample
Deployment&rdquo; wizard then you will probably have created one at the following step:</p>

<p><img src="/images/posts/opsworks_codedeploy/policywizard.png"></p>

<p>If you need to create one manually then you can <a href="http://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-create-service-role.html">follow these steps</a>
 to first create a role with the following policy:</p>

<p><img src="/images/posts/opsworks_codedeploy/policy.png"></p>

<p>Then set the trust relationships:</p>

<p><img src="/images/posts/opsworks_codedeploy/trust.png"></p>

<h1>Creating CodeDeploy application</h1>

<p>Next go to the CodeDeploy console and create a new application using the &ldquo;Custom Deployment&rdquo; option.</p>

<p>In the application options you have to define which EC2 instance tags will be included in the deployment. Set the <code>
opsworks:stack</code> and <code>opsworks:layer:php-app</code> to the name of your stack and layer respectively.</p>

<p><img src="/images/posts/opsworks_codedeploy/codedeploy_app.png"></p>

<p>Select a Deployment Config (eg. <code>CodeDeployDefault.OneAtATime</code>), and set the Service Role ARN to the service
 role you created earlier.</p>

<h2>Integrating OpsWorks and CodeDeploy</h2>

<ul>
<li><a href="/blog/2014/11/23/integrating-opsworks-and-codedeploy/">Part 1</a> &ndash; Introduction and getting started.</li>
<li><a href="/blog/2014/11/24/part-2-integrating-opsworks-and-codedeploy/">Part 2</a> &ndash; OpsWorks configuration and recipes.</li>
<li><a href="/blog/2014/11/25/part-3-integrating-opsworks-and-codedeploy/">Part 3</a> &ndash; Deployment and results.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Automatic DNS Records Using Route53 on OpsWorks]]></title>
    <link href="http://hipsterdevblog.com/blog/2014/06/23/automatic-dns-records-using-route53/"/>
    <updated>2014-06-23T18:28:23+10:00</updated>
    <id>http://hipsterdevblog.com/blog/2014/06/23/automatic-dns-records-using-route53</id>
    <content type="html"><![CDATA[<p>
    Lets say you have a load balanced web application managed with OpsWorks – your application traffic will be addressed
    to the load balancer, but sometimes it's still handy to address your application nodes directly for testing
    purposes or perhaps so each node has a unique SNS endpoint for HTTP notifications. You could just  use their IP,
    but unless you use an EIP that IP address may change. You could create a DNS record, which would be easier to remember
    and allows the IP to change – but managing this manually would be a pain.
</p>




<p>
    Fortunately this process of managing DNS records can be automated using Chef, Route53 and the EC2 instance
    metadata functionality to obtain the public IP. Each instance will automatically create an A record for
    <code>[instance name].example.com</code> on setup using their OpsWorks instance name.
</p>




<!-- more -->




<h2>Getting started</h2>


<p>
    Firstly, I'll assume you have a Route53 zone created – in my case the zone will be called <code>example.com</code>.
    You'll also need a set of AWS access keys, I recommend creating an IAM user restricted to managing your hosted zone.
    You can use the following IAM user policy:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>IAM User Policy </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="err">&amp;ldquo;Version&amp;rdquo;:</span> <span class="err">&amp;ldquo;2012-10-17&amp;rdquo;,</span>
</span><span class='line'>  <span class="err">&amp;ldquo;Statement&amp;rdquo;:</span> <span class="err">[&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">&lt;pre&gt;&lt;code&gt;{</span>
</span><span class='line'>  <span class="nt">&quot;Sid&quot;</span><span class="p">:</span> <span class="s2">&quot;Stmt1403515694000&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;Effect&quot;</span><span class="p">:</span> <span class="s2">&quot;Allow&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;Action&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s2">&quot;route53:ChangeResourceRecordSets&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;route53:GetHostedZone&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;route53:ListResourceRecordSets&quot;</span>
</span><span class='line'>  <span class="p">],</span>
</span><span class='line'>  <span class="nt">&quot;Resource&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s2">&quot;arn:aws:route53:::hostedzone/&amp;lt;insert your hosted zone ID&amp;gt;&quot;</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="err">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">&lt;p&gt;</span>  <span class="err">]</span>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
    Next add your AWS credentials and zone ID as custom JSON variables in your OpsWorks stack:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Custom JSON </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="err">&amp;ldquo;dns_zone_id&amp;rdquo;</span>      <span class="err">:</span> <span class="err">&amp;ldquo;&lt;insert</span> <span class="err">hosted</span> <span class="err">zone</span> <span class="err">ID&gt;&amp;rdquo;,</span>
</span><span class='line'>  <span class="err">&amp;ldquo;custom_access_key&amp;rdquo;:</span> <span class="err">&amp;ldquo;&lt;insert</span> <span class="err">access</span> <span class="err">key&gt;&amp;rdquo;,</span>
</span><span class='line'>  <span class="err">&amp;ldquo;custom_secret_key&amp;rdquo;:</span> <span class="err">&amp;ldquo;&lt;insert</span> <span class="err">secret</span> <span class="err">key&gt;&amp;rdquo;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
 Adding custom JSON to your stack is covered in more detail in
 <a target="_blank" href="http://hipsterdevblog.com/blog/2014/06/22/retrieving-files-from-s3-using-chef-on-opsworks/">Retrieving Files From S3 Using Chef on OpsWorks</a>.
</p>


<p>
    Finally, add the <a target="_blank" href="http://community.opscode.com/cookbooks/route53">route53 cookbook</a>
    to your Berksfile. If you're not using Berkshelf you'll have to clone the whole cookbook into your custom cookbook
    repository.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Berksfile </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;https://api.berkshelf.com&quot;</span><span class="o">&gt;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">api</span><span class="o">.</span><span class="n">berkshelf</span><span class="o">.</span><span class="n">com</span><span class="o">&lt;</span><span class="sr">/a&gt;&amp;rdquo;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">cookbook</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">route53</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&gt;=</span> <span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">4</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Creating your recipes</h2>


<p>
    Next, we need to create a custom cookbook and recipes – in this example the cookbook is called <code>dnsupdate</code>.
     Create the following file structure and files in your custom cookbook repository:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>File Structure </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dnsupdate/metadata.rb
</span><span class='line'>dnsupdate/recipes/add.rb</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>metadata.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="nb">name</span>        <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">dnsupdate</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">description</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">Update</span> <span class="no">Route53</span> <span class="no">Zone</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">maintainer</span>  <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">Dilbert</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">license</span>     <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">Apache</span> <span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">version</span>     <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;depends &amp;ldquo;route53&amp;rdquo;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>recipes/add.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="nb">require</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">net</span><span class="o">/</span><span class="n">http</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="n">include_recipe</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">route53</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;route53_record &amp;ldquo;create a record&amp;rdquo; do</span>
</span><span class='line'><span class="sr">  name  node[:opsworks][:instance][:hostname] + &amp;lsquo;.example.com&amp;rsquo;</span>
</span><span class='line'><span class="sr">  value Net::HTTP.get(URI.parse(&amp;lsquo;&lt;a href=&quot;http:/</span><span class="o">/</span><span class="mi">169</span><span class="o">.</span><span class="mi">254</span><span class="o">.</span><span class="mi">169</span><span class="o">.</span><span class="mi">254</span><span class="o">/</span><span class="n">latest</span><span class="o">/</span><span class="n">meta</span><span class="o">-</span><span class="n">data</span><span class="o">/</span><span class="kp">public</span><span class="o">-</span><span class="n">ipv4</span><span class="s2">&quot;&gt;http://169.254.169.254/latest/meta-data/public-ipv4&lt;/a&gt;&amp;rsquo;))</span>
</span><span class='line'><span class="s2">  type  &amp;ldquo;A&amp;rdquo;</span>
</span><span class='line'><span class="s2">  ttl   60</span>
</span><span class='line'><span class="s2">  zone_id               node[:dns_zone_id]</span>
</span><span class='line'><span class="s2">  aws_access_key_id     node[:custom_access_key]</span>
</span><span class='line'><span class="s2">  aws_secret_access_key node[:custom_secret_key]</span>
</span><span class='line'><span class="s2">  overwrite true</span>
</span><span class='line'><span class="s2">  action :create</span>
</span><span class='line'><span class="s2">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
    Substitute <code>.example.com</code> with your own domain. <code>Net::HTTP.get(URI.parse('http://169.254.169.254/latest/meta-data/public-ipv4'))</code>
    is using the <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html">instance data API</a> to obtain the public IP
      – use the IP above any instance.
</p>




<h2>Adding recipe to life cycle event</h2>


<p>
    Once you've committed and pushed the new recipe to your custom cookbook repository you're ready to add the recipe
    to the configure life cycle event. First update your custom cookbooks, by going to your stack > Run Command > and
    selecting 'Update Custom Cookbooks' from the command select box.
</p>


<p>
    Finally, navigate to a layer in OpsWorks > Edit > Recipes > add 'dnsupdate::add' to the configure
    event and save.
</p>


<p><img src="/images/posts/route53_dns/add_recipe.png"></p>

<p>
    Now when the run the configure event you should see a new DNS A record being added in Route53!
</p>

]]></content>
  </entry>
  
</feed>
